<%= form_for @discovery_rule, :url => (@discovery_rule.new_record? ? discovery_rules_path : discovery_rule_path(:id => @discovery_rule.id)) do |f| %>
    <%= base_errors_for @discovery_rule %>

        <ul class="nav nav-tabs" data-tabs="tabs">
          <li class="active"><a href="#primary" data-toggle="tab"><%= _('Primary') %></a></li>
          <% if show_location_tab? %>
              <li><a href="#locations" data-toggle="tab"><%= _('Locations') %></a></li>
          <% end %>
          <% if show_organization_tab? %>
              <li><a href="#organizations" data-toggle="tab"><%= _('Organizations') %></a></li>
          <% end %>
        </ul>

        <div class="tab-content">

          <div class="tab-pane active" id="primary">
            <%= text_f f, :name %>
            <%= autocomplete_f f, :search,
                               :path             => discovered_hosts_path,
                               :control_group_id => 'search_group', :size => 'col-md-9' %>
            <%= select_f f, :hostgroup_id, accessible_resource_records(:hostgroup, :title).to_a, :id, :to_label, { :include_blank => false },
                         { :help_inline => _('Target host group for this rule with all properties set') } %>
            <%= text_f f, :hostname,
                       :label_help => render('discovery_rules/template_inline').html_safe,
                       :label_help_options => {:title => _("Hostname for provisioned hosts"), :'data-placement' => 'bottom' } %>
            <%= counter_f f, :max_count, :label => _('Hosts Limit'), :help_inline => _('Maximum hosts provisioned with this rule (0 = unlimited)'), :min => 0 %>
            <%= counter_f f, :priority, :help_inline => _('Rule priority (lower integer means higher priority)'), step: DiscoveryRule::STEP %>
            <%= checkbox_f f, :enabled %>
          </div>
          <%= render 'taxonomies/loc_org_tabs', :f => f, :obj => @discovery_rule %>
        </div>
    <%= submit_or_cancel f %>
<% end %>

<script type="text/javascript" charset="utf-8">
$(document).ready(function() {
  $('input.counter_spinner').spinner();
});
</script>
